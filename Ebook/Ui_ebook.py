# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'c:\Python\電子書爬蟲\ebook.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(728, 300)
        self.label_3 = QtWidgets.QLabel(Form)
        self.label_3.setGeometry(QtCore.QRect(10, 10, 271, 31))
        font = QtGui.QFont()
        font.setFamily("標楷體")
        font.setPointSize(18)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.widget = QtWidgets.QWidget(Form)
        self.widget.setGeometry(QtCore.QRect(3, 60, 721, 231))
        self.widget.setObjectName("widget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.widget)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.lineEdit = QtWidgets.QLineEdit(self.widget)
        self.lineEdit.setObjectName("lineEdit")
        self.gridLayout.addWidget(self.lineEdit, 0, 1, 1, 1)
        self.label = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setFamily("標楷體")
        font.setPointSize(12)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 0, 1, 1)
        self.pushButton = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("標楷體")
        font.setPointSize(12)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.gridLayout.addWidget(self.pushButton, 0, 2, 1,1)
        self.pushButton_2 = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("標楷體")
        font.setPointSize(12)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton")
        self.gridLayout.addWidget(self.pushButton_2, 2, 2, 1, 1)
        """
        self.pushButton_2: 要添加的小部件对象，即按钮。
        0: 表示按钮要放置的行索引。在这个例子中，按钮将放置在第 0 行。
        2: 表示按钮要放置的列索引。在这个例子中，按钮将放置在第 2 列。
        3: 表示按钮将占据的行数。在这个例子中，按钮将占据 3 行。
        1: 表示按钮将占据的列数。在这个例子中，按钮将占据 1 列。
        """

        self.lineEdit_2 = QtWidgets.QLineEdit(self.widget)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.gridLayout.addWidget(self.lineEdit_2, 2, 1, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setFamily("標楷體")
        font.setPointSize(14)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 2, 0, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setFamily("標楷體")
        font.setPointSize(12)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.gridLayout.addWidget(self.label_4, 1, 0, 1, 1)
        self.lineEdit_3 = QtWidgets.QLineEdit(self.widget)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.gridLayout.addWidget(self.lineEdit_3, 1, 1, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout, 0, 0, 1, 1)
        self.progressBar = QtWidgets.QProgressBar(self.widget)
        font = QtGui.QFont()
        font.setFamily("標楷體")
        font.setPointSize(12)
        self.progressBar.setFont(font)
        self.progressBar.setProperty("value", 0)
        self.progressBar.setObjectName("progressBar")
        self.gridLayout_2.addWidget(self.progressBar, 1, 0, 1, 1)

        self.retranslateUi(Form)
        
        self.pushButton.clicked.connect(self.screentojpg)

        self.pushButton_2.clicked.connect(self.topdf) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "電子下載器"))
        self.label_3.setText(_translate("Form", "電子書截圖與轉換器"))
        self.label.setText(_translate("Form", "圖片下載資料夾"))
        self.pushButton.setText(_translate("Form", "開始截圖"))
        self.pushButton_2.setText(_translate("Form", "轉成PDF"))
        self.label_2.setText(_translate("Form", "PDF轉檔名稱"))
        self.label_4.setText(_translate("Form", "電子書總頁數"))

    def topdf(self):
        import Ebooktools,os
        ebook = Ebooktools.Ebooktools()
        ebook.progress_updated.connect(self.update_progress_bar_topdf)
        path =self.lineEdit.text()
        if not path.endswith("\\"):
             path+= "\\"
             self.lineEdit.setText(path)
        ebook.jpgtopdf(path,self.lineEdit_2.text())
        print("OK")
        
    def screentojpg(self):
        import Ebooktools,time,os
        from PyQt5.QtWidgets import QMessageBox
        # QMessageBox.information(self.widget,"注意事項","按確定後5秒先將畫面移到電子書畫面")
        # time.sleep(5)
        ebook = Ebooktools.Ebooktools()
        # 连接信号和槽函数
        ebook.progress_updated.connect(self.update_progress_bar)
        print(ebook.progress_updated)
        path = self.lineEdit.text()
        if not path.endswith("\\"):
             path+= "\\"
             self.lineEdit.setText(path)
        # 检查目录是否存在，如果不存在则创建
        if not os.path.exists(path):
             os.makedirs(path)
       
        ebook.screenshottojpg(path,int(self.lineEdit_3.text()))
        
    def update_progress_bar(self, iteration: int):
      
    # 在此处获取迭代的值，并更新进度条
        # self.progressBar.setValue(iteration)  
        progress = iteration/int(self.lineEdit_3.text())*100
        
        self.progressBar.setProperty("value", progress)

    def update_progress_bar_topdf(self, iteration: int):
        import os
        folder_path = self.lineEdit.text()
        file_count = len(os.listdir(folder_path))
       
    # 在此处获取迭代的值，并更新进度条
        # self.progressBar.setValue(iteration)  
        progress = iteration/int(file_count)*100
        self.progressBar.setProperty("value", progress)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    mainwindow = QtWidgets.QWidget()
    mainwindow.setGeometry(200,200,800,600)
    ui = Ui_Form()
    ui.setupUi(mainwindow)
    mainwindow.show()
    sys.exit(app.exec_())
    
